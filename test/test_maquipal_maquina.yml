-   |
    Creamos un nuevo cliente
-
    !record {model: res.partner, id: maquipal_cliente2}:
        name: "Cliente 2"
        actividad: "Actividad Cliente 2"
        riesgo: "Riesgo Cliente 2"
        address: 
            - name: "John Smith"
              title: base.res_partner_title_sir
              function: "Administrador" 
              street: "calle 1"
              street2: "calle 2"
              zip: "445567"
              city: "Bollullos"
              phone: "+34 66666666"
              mobile: "+32 00000000"
              fax: "+34 555555555"
              email: "test2@test.com"
        #Falta History con los mails
        comment: "Comentarios Cliente 2"

-   |
    Creamos una nueva maquina, con cliente maquipal_cliente2
-
    !record {model: product.product, id: maquipal_maquina1}:
        name: "Nueva Maquina"
        modelo: "Nuevo Modelo"
        serie: "Nueva Serie"
        cliente_id: maquipal_cliente2

-   |
    Desde maquina creamos una nueva nota y comprobamos que tiene los campos de maquipal_cliente2 y maquipal_maquina1
-
    !python {model: product.product}: |
        #creamos la nota
        nota = self.crear_nota_desde_maquina(cr, uid, [ref("maquipal_maquina1")], context=context)
        #obtenemos todas las notas
        lasnotas = self.pool.get('maquipal.nota')
        #seleccionamos la nota que acabamos de crear
        lanota = lasnotas.browse(cr, uid, nota['res_id'])
        #comprobamos
        assert lanota.cliente_id.name == "Cliente 2"
        assert lanota.phone == "+34 66666666"
        assert lanota.contacto == "John Smith"
        assert lanota.maquina.name == "Nueva Maquina"
        assert lanota.modelo == "Nuevo Modelo"
        assert lanota.serie == "Nueva Serie"


